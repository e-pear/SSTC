//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSTC.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SSTC.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program&apos;s main purpose is to calculate wire sags and tensions in overhead powerline section.
        ///Mathematically, the goal is achieved by solving 5th degree n - nonlinear equation system.
        ///
        ///Main features:
        ///1. Support for solving nonlinear equations systems by using the Newton-Raphson method with the possibility of selecting the Jacobi matrix factor algorithm.
        ///2. User is able to define any overhead powerline section that includes: spacing, position in terrain and height of supporting structures, weight and [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] conductors {
            get {
                object obj = ResourceManager.GetObject("conductors", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ####|Comment Section.|||\n
        ///####|in message variables are handled by &quot;@?&quot; expression where &quot;?&quot; is 1,2,3,...,n number (no zero). Expressions must correspond to specified string variables arrays.|||\n
        ///####|E??? - Application errors:|||\n
        ///E000|Unknown error|An unknown error has occured|Unknown error occured|\n
        ///E011|Log file error|Unable to write logs on hard drive|Unable to write logs on hard drive|\n
        ///E021|Language file error|messages.csv file could not be opened|messages.csv language file missing or corru [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MessageCodes {
            get {
                return ResourceManager.GetString("MessageCodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] sets {
            get {
                object obj = ResourceManager.GetObject("sets", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
