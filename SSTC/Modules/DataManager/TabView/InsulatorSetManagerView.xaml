<UserControl x:Class="SSTC.Modules.DataManager.TabView.InsulatorSetManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SSTC.Modules.DataManager.TabView"
             xmlns:rules="clr-namespace:SSTC_ViewResources.Rules;assembly=SSTC_ViewResources"
             mc:Ignorable="d" 
             d:DesignHeight="530" d:DesignWidth="970">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
        <Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontStyle="Italic" Foreground="Red" Background="Wheat" Text=" ! "/>
                            <AdornedElementPlaceholder x:Name="placeholder" Grid.Column="1"/>
                            <TextBlock FontStyle="Italic" Foreground="Red" Background="Wheat" Grid.Row="1" Grid.Column="1" Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="WrapWithOverflow"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="ToolTip" Value="Invalid input."/>
                </Trigger>
                <DataTrigger Binding="{Binding Path=BufferedRow}">

                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="WideTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition Width="120"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock FontStyle="Italic" Foreground="Red" Background="Wheat" Text="!" TextAlignment="Center" Grid.Column="1" Width="120"/>
                            <AdornedElementPlaceholder x:Name="placeholder" Grid.Row="1" Grid.ColumnSpan="2"/>
                            <TextBlock FontStyle="Italic" Foreground="Red" Background="Wheat" Grid.Row="2" Grid.ColumnSpan="2" Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" TextWrapping="WrapWithOverflow"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="BorderGrid_I" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <!--MainGrid + SideGrid (IIx)-->
            <RowDefinition Height="98*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <!--MainGrid_IIa-->
            <ColumnDefinition Width="63*"/>
            <ColumnDefinition Width="3*"/>
            <!--SideGrid_IIb-->
            <ColumnDefinition Width="32*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="MainGrid_IIa" Grid.Row="1" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="87*"/>
            </Grid.RowDefinitions>
            <!--Main Grid Elements - Upper Menu: -->
            <StackPanel Orientation="Horizontal">
                <Label Content="Filter:" Margin="5,0,5,0" VerticalAlignment="Center" FontSize="14"/>
                <ComboBox x:Name="main_ComboBox_Category" Margin="5,0,10,0" Height="30" Width="200" ItemsSource="{Binding Path=Categories, Mode=OneWay}" SelectedItem="{Binding Path=SelectedCategory, Mode=TwoWay}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" FontWeight="Bold"/>
                <Separator/>
                <Menu Height="30" VerticalContentAlignment="Center">
                    <MenuItem Header="Database Import / Export" Margin="0,5,0,5">
                        <MenuItem Header="{Binding Path=ExportLabel, Mode=OneWay}" Command="{Binding Path=ExportCommand}" ToolTip="Export database or selected category to .csv file"/>
                        <MenuItem Header="{Binding Path=ImportLabel, Mode=OneWay}" Command="{Binding Path=ImportCommand}" ToolTip="Replace existing database by imported one or extend selected category by imported data."/>
                    </MenuItem>
                </Menu>
                <Button Content="SAVE" Command="{Binding Path=CloseCommand}" CommandParameter="{Binding ElementName=window_Main}" Margin="10,0,10,0" Height="30" FontSize="18" FontWeight="Bold" Foreground="red"/>
                <Separator/>
                <TextBlock x:Name="statInformer_DBStatus" Text="{Binding Path=DatabaseStatus, Mode=OneWay}" ToolTip="Database status:" TextAlignment="Center" Height="35" Width="90" Margin="10,5,10,5" TextWrapping="Wrap"/>
            </StackPanel>
            <!--Main Grid Elements - General Data Viewer: -->
            <DataGrid x:Name="dataGrid_InsulatorSetDataBase" ItemsSource="{Binding Path=ShownCollection}" SelectedItem="{Binding Path=SelectedRow, Mode=OneWayToSource}" Grid.Row="2" Margin="5,5,5,5" AutoGenerateColumns="False" SelectionMode="Single" CanUserAddRows="False" CanUserDeleteRows="False" VerticalContentAlignment="Center">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Path=Category, Mode=OneWay}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="Category" TextWrapping="Wrap" TextAlignment="Center" Width="70"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="80" Binding="{Binding Path=CodeName, Mode=OneWay}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="Code name" TextWrapping="Wrap" TextAlignment="Center" Width="70"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="50" Binding="{Binding Path=ArmLength, Mode=OneWay}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="L&#x1D62;&#x2099;&#x209B;      [m]" ToolTip="Attachment set length [m]" TextWrapping="Wrap" TextAlignment="Center" Width="45"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="50" Binding="{Binding Path=ArmWeight, Mode=OneWay}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="W&#x1D62;&#x2099;&#x209B;      [kg]" ToolTip="Attachment set weight [kg]" TextWrapping="Wrap" TextAlignment="Center" Width="45"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="50" Binding="{Binding Path=OpeningAngle, Mode=OneWay, StringFormat=#.0}" Visibility="Hidden">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="&#x0398;          [&#x00B0;]" ToolTip="Opening Angle - only inverted-V attachment sets [&#x00B0;]" TextWrapping="Wrap" TextAlignment="Center" Width="45"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path=Description, Mode=OneWay}">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="Description" TextWrapping="Wrap" TextAlignment="Center" Width="275"/>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <GroupBox x:Name="groupBox_SidePanel" Margin="5,5,5,5" Header="Attachment Set Data:" Grid.Column="3" Grid.Row="1">
        <Grid x:Name="SideGrid_IIb" Grid.Row="1" Grid.Column="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="55*"/>
                <ColumnDefinition Width="45*"/>
            </Grid.ColumnDefinitions>
            <!--Side Grid Elements: -->
            <Label Content="Type:" ToolTip="Attachment set type:" VerticalAlignment="Center"/>
            <Label Content="Code name:" ToolTip="Attachment set name" VerticalAlignment="Center" Grid.Row="2"/>
            <Label Content="{Binding Path=ArmLengthLabel}" ToolTip="Attachment set / attachment set arm length [m]" VerticalAlignment="Center" Grid.Row="3"/>
            <Label Content="{Binding Path=ArmWeightLabel}" ToolTip="Attachment set / attachment set arm weight [kg]" VerticalAlignment="Center" Grid.Row="4"/>
                <Label Content="Opening angle &#x0398; [&#xb0;]:" ToolTip="Inverted-V attachment set opening angle [&#xb0;]" VerticalAlignment="Center" Grid.Row="5" Visibility="{Binding Path=OpeningAngleVisibility, Converter={StaticResource VisibleIfTrueConverter}}"/>
            <ComboBox x:Name="side_ComboBox_Type" Margin="5,0,5,0" Height="30" ItemsSource="{Binding Path=AvailableTypes}" SelectedItem="{Binding Path=EB_SelectedType, Mode=TwoWay}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="side_ComboBox_Type_KeyUp" Grid.Column="1"/>
            <TextBox x:Name="side_TextBox_Code" Margin="5,0,5,0" Height="30" Style="{StaticResource ResourceKey=DefaultTextBoxStyle}" KeyUp="side_TextBox_Code_KeyUp" Grid.Row="2" Grid.Column="1">
                <Binding Path="EB_CodeName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <rules:TextFieldValidationRule ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox x:Name="side_TextBox_Lins" Margin="5,0,5,0" Height="30" Style="{StaticResource ResourceKey=DefaultTextBoxStyle}" KeyUp="side_TextBox_Lins_KeyUp" Grid.Row="3" Grid.Column="1">
                <Binding Path="EB_ArmLength" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="F2">
                    <Binding.ValidationRules>
                        <rules:NumericFieldValidationRule_PRN ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBox x:Name="side_TextBox_Wins" Margin="5,0,5,0" Height="30" Style="{StaticResource ResourceKey=DefaultTextBoxStyle}" KeyUp="side_TextBox_Wins_KeyUp" Grid.Row="4" Grid.Column="1">
                <Binding Path="EB_ArmWeight" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="F2">
                    <Binding.ValidationRules>
                        <rules:NumericFieldValidationRule_PRN ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
                <TextBox x:Name="side_TextBox_ains" Margin="5,0,5,0" Height="30" Style="{StaticResource ResourceKey=DefaultTextBoxStyle}" KeyUp="side_TextBox_ains_KeyUp" Grid.Row="5" Grid.Column="1" Visibility="{Binding Path=OpeningAngleVisibility, Converter={StaticResource VisibleIfTrueConverter}}">
                <Binding Path="EB_OpeningAngle" Mode="TwoWay" UpdateSourceTrigger="LostFocus" StringFormat="F2">
                    <Binding.ValidationRules>
                        <rules:NumericFieldValidationRule_RN ValidationStep="RawProposedValue"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <StackPanel Orientation="Vertical" Grid.Row="6" Grid.ColumnSpan="2">
                <Label Content="Short Description:"/>
                <TextBox x:Name="side_TextBox_Desc" Style="{StaticResource ResourceKey=WideTextBoxStyle}" KeyUp="side_TextBox_Desc_KeyUp" TextWrapping="WrapWithOverflow" VerticalScrollBarVisibility="Auto" Height="70" Margin="5,0,5,0">
                    <Binding Path="EB_Description" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <rules:TextFieldValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
            </StackPanel>
            <Grid x:Name="SideGridMenu_III" Grid.Row="8" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="32*"/>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="32*"/>
                </Grid.ColumnDefinitions>
                <!--Side Grid Menu Buttons: -->
                <Button x:Name="side_Button_Save" Margin="0,10,0,10"  Content="Save as New" Width="73" Command="{Binding SaveAsNewRecordCommand}"/>
                <Button x:Name="side_Button_Overwrite" Margin="0,10,0,10" Content="Overwrite" Width="73" Command="{Binding OverwriteRecordCommand}" Grid.Column="2"/>
                <Button x:Name="side_Button_Remove" Margin="0,10,0,10" Content="Remove" Width="73" Command="{Binding RemoveRecordCommand}" Grid.Column="4"/>
            </Grid>
        </Grid>
        </GroupBox>
    </Grid>
</UserControl>
